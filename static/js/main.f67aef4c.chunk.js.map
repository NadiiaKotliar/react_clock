{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerIdClock","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","clockName","props","debug","clearInterval","modifiedDate","className","Component","App","hasClock","timerId","getRandomName","value","now","toString","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"qMAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,aAAe,EALjB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,aAAeE,OAAOC,aAAY,WACrC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAE3BG,OAAOG,QAAQC,MAAM,IAAIP,MAAQQ,cAAcC,OAAO,IAAK,MAC1D,OAZP,gCAeE,SAAmBC,GACjB,IAAQC,EAAcT,KAAKU,MAAnBD,UAEJA,IAAcD,EAAUC,WAC1BR,OAAOG,QAAQO,MAAf,uBACkBH,EAAUC,UAD5B,eAC4CA,MApBlD,kCAyBE,WACER,OAAOW,cAAcZ,KAAKD,gBA1B9B,oBA6BE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAY,EAAcT,KAAKU,MAAnBD,UACFI,EAAehB,EAAMS,cAAcC,OAAO,IAAK,GAErD,OACE,sBAAKO,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGD,WA3CX,GAA2BE,aCDdC,G,MAAb,4MACEpB,MAAQ,CACNqB,UAAU,EACVR,UAAW,WAHf,EAMES,QAAU,EANZ,EAyBEC,cAAgB,WACd,IAAMC,EAAQtB,KAAKuB,MAAMC,WAAWf,OAAO,GAE3C,MAAM,SAAN,OAAgBa,IA5BpB,uDAQE,WAAqB,IAAD,OAClBG,SAASC,iBAAiB,SAAS,WACjC,EAAKrB,SAAS,CAAEc,UAAU,OAE5BM,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKvB,SAAS,CAAEc,UAAU,OAE5BjB,KAAKkB,QAAUjB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEM,UAAW,EAAKU,oBAC/B,QAlBP,kCAqBE,WACElB,OAAOW,cAAcZ,KAAKkB,WAtB9B,oBA+BE,WACE,MAAgClB,KAAKJ,MAA7BqB,EAAR,EAAQA,SAAUR,EAAlB,EAAkBA,UAElB,OACE,sBAAKK,UAAU,MAAf,UACE,6CACCG,GAAY,cAAC,EAAD,CAAOR,UAAWA,WArCvC,GAAyBM,cCNzBY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.f67aef4c.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\ntype State = {\n  today: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerIdClock = 0;\n\n  componentDidMount() {\n    this.timerIdClock = window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      window.console.info((new Date()).toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    const { clockName } = this.props;\n\n    if (clockName !== prevProps.clockName) {\n      window.console.debug(\n        `Renamed from ${prevProps.clockName} to ${clockName}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerIdClock);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { clockName } = this.props;\n    const modifiedDate = today.toUTCString().slice(-12, -4);\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {modifiedDate}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\ntype State = {\n  hasClock: boolean,\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: this.getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  getRandomName = () => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}